start ::= program eof

program ::= extern_list decl_list 
| decl_list

extern_list ::= extern extern_list'

extern_list' ::= extern extern_List' 
                | epsilon

extern ::= "extern" type_spec IDENT "(" params ")" ";"

decl_list ::= decl decl_list' 

decl_list' ::= decl decl_list' | epsilon

decl ::= var_decl 
|  fun_decl

var_decl ::= var_type IDENT ";" 

type_spec ::= "void"
|  var_type           

var_type  ::= "int" |  "float" |  "bool"

fun_decl ::= type_spec IDENT "(" params ")" block

params ::= param_list  
|  "void" | epsilon

param_list ::= param "," param_list'
            | param
 
param_list' ::= param "," param_list' | epsilon

param ::= var_type IDENT

block ::= "{" local_decls stmt_list "}"

local_decls ::= local_decl local_decls
|  epsilon

local_decl ::= var_type IDENT ";"

stmt_list ::= stmt stmt_list
|  epsilon

stmt ::= expr_stmt 
|  block 
|  if_stmt 
|  while_stmt 
|  return_stmt

expr_stmt ::= expr ";" 
|  ";"

while_stmt ::= "while" "(" expr ")" stmt 

if_stmt ::= "if" "(" expr ")" block else_stmt

else_stmt  ::= "else" block
|  epsilon

return_stmt ::= "return" ";" 
|  "return" expr ";"  

# operators in order of increasing precedence      
expr ::= IDENT "=" expr
| rval7

rval7::= rval6 rval7'

rval7' ::= "||" rval6 rval7' 
| epsilon

rval6 ::= rval5 rval6'

rval6' ::= "&&" rval5 rval6' 
| epsilon

rval5 ::= rval4 rval5'

rval5' ::= "==" rval4 rval5' 
| "!=" rval4 rval5' 
| epsilon

rval4 ::= rval3 rval4'

rval4' ::= "<=" rval3 rval4' 
| "<" rval3 rval4' 
| ">=" rval3 rval4' 
| ">" rval3 rval4' 
| epsilon

rval3 ::= rval2 rval3'

rval3' ::= "+" rval2 rval3' 
| "-" rval2 rval3' 
| epsilon

rval2 ::= rval1 rval2'

rval2' ::= "*" rval1 rval2' 
| "/" rval1 rval2' 
| "%" rval1 rval2' 
| epsilon

rval1 ::=  "-" rval1 | "!" rval1
| "(" expr ")"
| IDENT | IDENT "(" args ")" 
| INT_LIT | FLOAT_LIT | BOOL_LIT 

args ::= arg_list 
|  epsilon

arg_list ::= expr "," arg_list' | expr

arg_list' ::= expr "," arg_list' | epsilon
